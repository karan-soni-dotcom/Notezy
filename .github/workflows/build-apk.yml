name: Build Android APK
on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-apk:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # Install Capacitor CLI globally so npx cap works without a package.json
      - name: Install Capacitor CLI
        run: npm install -g @capacitor/cli

      - name: Prepare www folder
        run: |
          echo "Cleaning and preparing www/…"
          rm -rf www
          mkdir www

          # Find all top-level html/js/css
          mapfile -t web_files < <(
            find . -maxdepth 1 -type f \( -name '*.html' -o -name '*.js' -o -name '*.css' \)
          )

          if [ ${#web_files[@]} -gt 0 ]; then
            echo "Copying web assets to www/":
            printf "  - %s\n" "${web_files[@]}"
            cp -- "${web_files[@]}" www/
          else
            echo "⚠️  No .html/.js/.css found at repo root → www/ will be empty"
          fi

          # Copy assets folder if it exists
          if [ -d assets ]; then
            echo "Copying assets/ → www/assets/"
            cp -r assets www/
          else
            echo "ℹ️  No assets/ directory found, skipping."
          fi

      - name: Initialize Capacitor project
        run: |
          npx cap init "PongApp" "com.example.pong" --web-dir=www || echo "ℹ️ Capacitor already initialized"

      - name: Add Android platform
        run: |
          npx cap add android || echo "ℹ️ Android platform already added"

      - name: Sync Capacitor to Android
        run: npx cap sync android

      - name: Generate Android app icons (with fallback)
        run: |
          sudo apt-get update
          sudo apt-get install -y imagemagick

          ICON_SRC=$(find . -maxdepth 2 -type f -name 'app.png' | head -n1 || true)

          if [ -f "$ICON_SRC" ]; then
            echo "Using icon: $ICON_SRC"
          else
            echo "⚠️ app.png not found; falling back to default placeholder icon."
            ICON_SRC="default/icon.png"
          fi

          if [ ! -f "$ICON_SRC" ]; then
            echo "❌ No icon available to resize—skipping icon generation."
            exit 0
          fi

          for size in 48 72 96 144 192 512; do
            case $size in
              48)  dir=mipmap-mdpi ;;
              72)  dir=mipmap-hdpi ;;
              96)  dir=mipmap-xhdpi ;;
              144) dir=mipmap-xxhdpi ;;
              192) dir=mipmap-xxxhdpi ;;
              512) dir=mipmap-anydpi-v26 ;;
            esac
            mkdir -p android/app/src/main/res/$dir
            convert "$ICON_SRC" -resize ${size}x${size} \
              android/app/src/main/res/$dir/ic_launcher.png \
              || echo "⚠️ Failed to generate ${size}×${size} icon; skipping."
          done

      - name: Setup Java 21
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '21'

      - name: Install Android SDK Tools
        uses: android-actions/setup-android@v3
        with:
          api-levels: 33
          build-tools: '33.0.2'

      - name: Grant execution permissions
        run: chmod +x android/gradlew

      - name: Build Release APK
        run: |
          cd android
          ./gradlew clean assembleRelease

      - name: Upload APK Artifact
        uses: actions/upload-artifact@v4
        with:
          name: pong-app-release.apk
          path: android/app/build/outputs/**/*.apk
